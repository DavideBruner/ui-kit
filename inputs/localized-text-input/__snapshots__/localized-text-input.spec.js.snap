// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering other languages should sort them by the length 1`] = `
<UNDEFINED>
  <LocalizedInput
    horizontalConstraint="scale"
    id="localized-text-input-1-de"
    isAutofocussed={false}
    isDisabled={undefined}
    isReadOnly={undefined}
    language="de"
    name={undefined}
    onBlur={undefined}
    onChange={[Function]}
    onFocus={undefined}
    placeholder={undefined}
    value="de"
  />
  <LocalizedInput
    horizontalConstraint="scale"
    id="localized-text-input-1-fr"
    isAutofocussed={false}
    isDisabled={undefined}
    isReadOnly={undefined}
    language="fr"
    name={undefined}
    onBlur={undefined}
    onChange={[Function]}
    onFocus={undefined}
    placeholder={undefined}
    value="fr"
  />
  <LocalizedInput
    horizontalConstraint="scale"
    id="localized-text-input-1-pt-BR"
    isAutofocussed={false}
    isDisabled={undefined}
    isReadOnly={undefined}
    language="pt-BR"
    name={undefined}
    onBlur={undefined}
    onChange={[Function]}
    onFocus={undefined}
    placeholder={undefined}
    value="pt-BR"
  />
  <LocalizedInput
    horizontalConstraint="scale"
    id="localized-text-input-1-nan-Hant-TW"
    isAutofocussed={false}
    isDisabled={undefined}
    isReadOnly={undefined}
    language="nan-Hant-TW"
    name={undefined}
    onBlur={undefined}
    onChange={[Function]}
    onFocus={undefined}
    placeholder={undefined}
    value="nan-Hant-TW"
  />
  <ExpandControl
    collapseMessage="Collapse"
    expandMessage="Expand all languages (4)"
    isOpen={true}
    onClick={[MockFunction]}
  />
</UNDEFINED>
`;

exports[`rendering when autofocus is activated should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        isAutofocussed={true}
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;

exports[`rendering when disabled should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        isDisabled={true}
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;

exports[`rendering when expanded by default should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={false}
    />
  </Stack>
</div>
`;

exports[`rendering when expansion toggle feature is disabled should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;

exports[`rendering when horizontal size is set should match snapshot 1`] = `
<div
  className="constraintS"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="s"
        id="localized-text-input-1-en"
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;

exports[`rendering when in read-only mode should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        isReadOnly={true}
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;

exports[`rendering when placeholders are provided should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        key="en"
        language="en"
        onChange={[Function]}
        placeholder="Value"
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;

exports[`rendering when there is an error should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={true}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
      <ErrorMessage>
        This field is requried
      </ErrorMessage>
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;

exports[`rendering with minimal props should match snapshot 1`] = `
<div
  className="constraintScale"
>
  <Stack
    alignItems="stretch"
    scale="s"
  >
    <div>
      <LocalizedInput
        hasError={false}
        horizontalConstraint="scale"
        id="localized-text-input-1-en"
        key="en"
        language="en"
        onChange={[Function]}
        value="Horse"
      />
    </div>
    <Collapsible
      isDefaultClosed={true}
    />
  </Stack>
</div>
`;
