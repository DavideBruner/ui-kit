const fs = require('fs');
const path = require('path');
const parser = require('css');

const css = fs.readFileSync(
  path.join(__dirname, '../materials/colors.mod.css'),
  'utf-8'
);
const originFile = parser.parse(css);
const rootRule = originFile.stylesheet.rules.find(
  rule => rule.type === 'rule' && rule.selectors.includes(':root')
);

// creates the proper css classes declarations
const declarationsBody = rootRule.declarations.reduce((acc, declaration) => {
  if (declaration.type === 'comment') {
    return acc;
  }
  acc.push({
    type: 'rule',
    selectors: [`.${declaration.property.replace('--color-', '')}`],
    declarations: [
      {
        type: 'declaration',
        property: 'background-color',
        value: declaration.value.replace('color', 'color-mod'),
      },
    ],
  });

  return acc;
}, []);

// filters out only variations by detecting a number in the names
const isVariation = colorName => /[0-9]/.test(colorName);

// creates the variables for main colors
const declarationsRoot = rootRule.declarations.reduce((acc, declaration) => {
  if (declaration.type === 'comment') {
    return acc;
  }

  if (!isVariation(declaration.property)) {
    acc.push({
      type: 'declaration',
      property: declaration.property,
      value: declaration.value.replace('color', 'color-mod'),
    });
  }

  return acc;
}, []);

const declarationsRootBody = {
  type: 'rule',
  selectors: [':root'],
  declarations: [...declarationsRoot],
};

const originalPath = 'materials/colors/decisions/base-colors.json';

const commentDoNotModify = {
  type: 'comment',
  comment: ` THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
  This file is created by 'scripts/generate-colors-for-story.js' script. The real
  colors's values should be updated in '${originalPath}';
  This file is used to list the colors in the UIKit Color's story purposes only. `,
};

const commentDisableStylelintCommentRule = {
  type: 'comment',
  comment: ` stylelint-disable no-missing-end-of-source-newline `,
};

const AST = {
  type: 'stylesheet',
  stylesheet: {
    rules: [
      commentDisableStylelintCommentRule,
      commentDoNotModify,
      declarationsRootBody,
      ...declarationsBody,
    ],
    parsingErrors: [],
  },
};

fs.writeFileSync(
  path.join(__dirname, '../materials/colors/colors-for-story.mod.css'),
  parser.stringify(AST),
  'utf-8'
);
